{"ast":null,"code":"var _jsxFileName = \"/home/matta/algo_viz/src/NavBar/NavBar.jsx\";\nimport React from \"react\";\nimport \"./NavBar.css\"; // TODO:\n// Change style of scroller\n// Disable buttons/scroller while the algo animation is running\n// Implement other 3 sorting algorithms\n// animation speed changes\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAlgo: null,\n      running: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(algorithm) {\n    this.setState({\n      activeAlgo: algorithm\n    });\n  }\n\n  render() {\n    const {\n      whenClickReset,\n      whenScrolled,\n      arrayMax,\n      whenClickStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      style: {\n        width: `${window.innerWidth}px`,\n        height: `50px`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"new-array-button\",\n        onClick: whenClickReset,\n        children: \"New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"changeSize\",\n        type: \"range\",\n        min: \"10\",\n        max: arrayMax,\n        onChange: whenScrolled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: this.state.activeAlgo === null,\n        className: this.state.activeAlgo === \"mergeSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\",\n        onClick: () => whenClickStart(this.state.activeAlgo),\n        children: \"Start Sorting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"mergeSort\",\n        className: this.state.activeAlgo === \"mergeSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\",\n        onClick: () => this.handleClick(\"mergeSort\"),\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: this.state.activeAlgo === \"quickSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\",\n        onClick: () => this.handleClick(\"quickSort\"),\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: this.state.activeAlgo === \"heapSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\",\n        onClick: () => this.handleClick(\"heapSort\"),\n        children: \"Heap Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: this.state.activeAlgo === \"selectionSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\",\n        onClick: () => this.handleClick(\"selectionSort\"),\n        children: \"Selection Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/matta/algo_viz/src/NavBar/NavBar.jsx"],"names":["React","NavBar","Component","constructor","props","state","activeAlgo","running","handleClick","bind","algorithm","setState","render","whenClickReset","whenScrolled","arrayMax","whenClickStart","width","window","innerWidth","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP,C,CAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAe,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,IADD;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,SAAD,EAAY;AACrB,SAAKC,QAAL,CAAc;AAAEL,MAAAA,UAAU,EAAEI;AAAd,KAAd;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA,YAAlB;AAAgCC,MAAAA,QAAhC;AAA0CC,MAAAA;AAA1C,QAA6D,KAAKZ,KAAxE;AAEA,wBACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,KAAK,EAAE;AACLa,QAAAA,KAAK,EAAG,GAAEC,MAAM,CAACC,UAAW,IADvB;AAELC,QAAAA,MAAM,EAAG;AAFJ,OAFT;AAAA,8BAOE;AAAQ,QAAA,KAAK,EAAC,kBAAd;AAAiC,QAAA,OAAO,EAAEP,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAO,QAAA,EAAE,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC,OAA5B;AAAoC,QAAA,GAAG,EAAC,IAAxC;AAA6C,QAAA,GAAG,EAAEE,QAAlD;AAA4D,QAAA,QAAQ,EAAED;AAAtE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AACE,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWC,UAAX,KAA0B,IADtC;AAEE,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,UAAX,KAA0B,WAA1B,GAAwC,wBAAxC,GAAmE,iBAFhF;AAGE,QAAA,OAAO,EAAE,MAAMU,cAAc,CAAC,KAAKX,KAAL,CAAWC,UAAZ,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAkBE;AACE,QAAA,EAAE,EAAC,WADL;AAEE,QAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,UAAX,KAA0B,WAA1B,GAAwC,wBAAxC,GAAmE,iBAFhF;AAGE,QAAA,OAAO,EAAE,MAAM,KAAKE,WAAL,CAAiB,WAAjB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF,eAyBE;AACE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,UAAX,KAA0B,WAA1B,GAAwC,wBAAxC,GAAmE,iBADhF;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKE,WAAL,CAAiB,WAAjB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF,eA+BE;AACE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,UAAX,KAA0B,UAA1B,GAAuC,wBAAvC,GAAkE,iBAD/E;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKE,WAAL,CAAiB,UAAjB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF,eAqCE;AACE,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,UAAX,KAA0B,eAA1B,GAA4C,wBAA5C,GAAuE,iBADpF;AAEE,QAAA,OAAO,EAAE,MAAM,KAAKE,WAAL,CAAiB,eAAjB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA8CD;;AA/DiD","sourcesContent":["import React from \"react\";\nimport \"./NavBar.css\";\n\n// TODO:\n// Change style of scroller\n// Disable buttons/scroller while the algo animation is running\n// Implement other 3 sorting algorithms\n// animation speed changes\n\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAlgo: null,\n      running: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(algorithm) {\n    this.setState({ activeAlgo: algorithm });\n  }\n\n  render() {\n    const { whenClickReset, whenScrolled, arrayMax, whenClickStart } = this.props;\n\n    return (\n      <div\n        className=\"navbar-container\"\n        style={{\n          width: `${window.innerWidth}px`,\n          height: `50px`,\n        }}\n      >\n        <button class=\"new-array-button\" onClick={whenClickReset}>\n          New Array\n        </button>\n        <input id=\"changeSize\" type=\"range\" min=\"10\" max={arrayMax} onChange={whenScrolled} />\n        <button\n          disabled={this.state.activeAlgo === null}\n          className={this.state.activeAlgo === \"mergeSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\n          onClick={() => whenClickStart(this.state.activeAlgo)}\n        >\n          Start Sorting\n        </button>\n        <button\n          id=\"mergeSort\"\n          className={this.state.activeAlgo === \"mergeSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\n          onClick={() => this.handleClick(\"mergeSort\")}\n        >\n          Merge Sort\n        </button>\n        <button\n          className={this.state.activeAlgo === \"quickSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\n          onClick={() => this.handleClick(\"quickSort\")}\n        >\n          Quick Sort\n        </button>\n        <button\n          className={this.state.activeAlgo === \"heapSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\n          onClick={() => this.handleClick(\"heapSort\")}\n        >\n          Heap Sort\n        </button>\n        <button\n          className={this.state.activeAlgo === \"selectionSort\" ? \"currentAlgorithmButton\" : \"algorithmButton\"}\n          onClick={() => this.handleClick(\"selectionSort\")}\n        >\n          Selection Sort\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}