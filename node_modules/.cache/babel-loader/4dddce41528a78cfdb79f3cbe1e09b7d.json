{"ast":null,"code":"export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  selectionSortHelper(array, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction selectionSortHelper(mainArray, auxiliaryArray, animations) {\n  //selectionSortHelper(auxiliaryArray, mainArray, animations);\n  //selectionSortHelper(auxiliaryArray, mainArray, animations);\n  doSelection(mainArray, auxiliaryArray, animations);\n}\n\nfunction doSelection(mainArray, auxiliaryArray, animations) {\n  let n = auxiliaryArray.length;\n\n  for (let i = 0; i < n; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n\n    for (let j = i + 1; j < n; j++) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n\n      if (auxiliaryArray[j] < auxiliaryArray[min]) {\n        min = j;\n      }\n    }\n\n    if (min !== i) {\n      // Swapping the elements\n      let tmp = auxiliaryArray[i];\n      auxiliaryArray[i] = auxiliaryArray[min];\n      auxiliaryArray[min] = tmp;\n      animations.push([i, auxiliaryArray[min]]); //animations.push([min, tmp]);\n    }\n  }\n}","map":{"version":3,"sources":["/home/matta/algo_viz/src/Algos/SelectionSort.js"],"names":["getSelectionSortAnimations","array","animations","length","auxiliaryArray","slice","selectionSortHelper","mainArray","doSelection","n","i","min","j","push","tmp"],"mappings":"AAAA,OAAO,SAASA,0BAAT,CAAoCC,KAApC,EAA2C;AAChD,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAOF,KAAP;AACvB,QAAMG,cAAc,GAAGH,KAAK,CAACI,KAAN,EAAvB;AACAC,EAAAA,mBAAmB,CAACL,KAAD,EAAQG,cAAR,EAAwBF,UAAxB,CAAnB;AACA,SAAOA,UAAP;AACD;;AAED,SAASI,mBAAT,CAA6BC,SAA7B,EAAwCH,cAAxC,EAAwDF,UAAxD,EAAoE;AAClE;AACA;AACAM,EAAAA,WAAW,CAACD,SAAD,EAAYH,cAAZ,EAA4BF,UAA5B,CAAX;AACD;;AACD,SAASM,WAAT,CAAqBD,SAArB,EAAgCH,cAAhC,EAAgDF,UAAhD,EAA4D;AAC1D,MAAIO,CAAC,GAAGL,cAAc,CAACD,MAAvB;;AAEA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA4B;AAC1B;AACA,QAAIC,GAAG,GAAGD,CAAV;;AACA,SAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGH,CAAxB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9BV,MAAAA,UAAU,CAACW,IAAX,CAAgB,CAACH,CAAD,EAAIE,CAAJ,CAAhB;AACAV,MAAAA,UAAU,CAACW,IAAX,CAAgB,CAACH,CAAD,EAAIE,CAAJ,CAAhB;;AAEA,UAAIR,cAAc,CAACQ,CAAD,CAAd,GAAoBR,cAAc,CAACO,GAAD,CAAtC,EAA6C;AAC3CA,QAAAA,GAAG,GAAGC,CAAN;AACD;AACF;;AACD,QAAID,GAAG,KAAKD,CAAZ,EAAe;AACb;AACA,UAAII,GAAG,GAAGV,cAAc,CAACM,CAAD,CAAxB;AACAN,MAAAA,cAAc,CAACM,CAAD,CAAd,GAAoBN,cAAc,CAACO,GAAD,CAAlC;AACAP,MAAAA,cAAc,CAACO,GAAD,CAAd,GAAsBG,GAAtB;AACAZ,MAAAA,UAAU,CAACW,IAAX,CAAgB,CAACH,CAAD,EAAIN,cAAc,CAACO,GAAD,CAAlB,CAAhB,EALa,CAMb;AACD;AACF;AACF","sourcesContent":["export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  selectionSortHelper(array, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction selectionSortHelper(mainArray, auxiliaryArray, animations) {\n  //selectionSortHelper(auxiliaryArray, mainArray, animations);\n  //selectionSortHelper(auxiliaryArray, mainArray, animations);\n  doSelection(mainArray, auxiliaryArray, animations);\n}\nfunction doSelection(mainArray, auxiliaryArray, animations) {\n  let n = auxiliaryArray.length;\n\n  for (let i = 0; i < n; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n    for (let j = i + 1; j < n; j++) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n\n      if (auxiliaryArray[j] < auxiliaryArray[min]) {\n        min = j;\n      }\n    }\n    if (min !== i) {\n      // Swapping the elements\n      let tmp = auxiliaryArray[i];\n      auxiliaryArray[i] = auxiliaryArray[min];\n      auxiliaryArray[min] = tmp;\n      animations.push([i, auxiliaryArray[min]]);\n      //animations.push([min, tmp]);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}