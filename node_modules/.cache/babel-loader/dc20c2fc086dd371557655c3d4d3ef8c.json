{"ast":null,"code":"var _jsxFileName = \"/home/matta/algo_viz/src/algoviz/algoviz.jsx\";\nimport React from 'react';\nimport './algoviz.css'; // Change this value for the speed of the animations.\n// Change this value for the number of bars (value) in the array.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NUMBER_OF_ARRAY_BARS = 310; // This is the main color of the array bars.\n// This is the color of array bars that are being compared throughout the animations.\n\nexport default class algoviz extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 730));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        children: value\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 1\n      }, this))\n    }, void 0, false);\n  }\n\n}\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}","map":{"version":3,"sources":["/home/matta/algo_viz/src/algoviz/algoviz.jsx"],"names":["React","NUMBER_OF_ARRAY_BARS","algoviz","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomIntFromInterval","setState","render","map","value","idx","min","max","Math","floor","random"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP,C,CAEA;AAEA;;;;AACA,MAAMC,oBAAoB,GAAG,GAA7B,C,CAEA;AAEA;;AAEA,eAAe,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AACnDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,UAAL;AACD;;AAEDA,EAAAA,UAAU,GAAG;AACX,UAAMF,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,oBAApB,EAA0CS,CAAC,EAA3C,EAA+C;AAC7CH,MAAAA,KAAK,CAACI,IAAN,CAAWC,qBAAqB,CAAC,CAAD,EAAI,GAAJ,CAAhC;AACD;;AACD,SAAKC,QAAL,CAAc;AAACN,MAAAA;AAAD,KAAd;AACD;;AAGDO,EAAAA,MAAM,GAAG;AACP,UAAM;AAACP,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,wBACA;AAAA,gBACKC,KAAK,CAACQ,GAAN,CAAU,CAACC,KAAD,EAAQC,GAAR,kBACnB;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACKD;AADL,SAAgCC,GAAhC;AAAA;AAAA;AAAA;AAAA,cADS;AADL,qBADA;AASD;;AAlCkD;;AAqCrD,SAASL,qBAAT,CAA+BM,GAA/B,EAAoCC,GAApC,EAAyC;AACvC;AACA,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,GAAG,GAAGD,GAAN,GAAY,CAA7B,IAAkCA,GAA7C,CAAP;AACD","sourcesContent":["import React from 'react';\nimport './algoviz.css';\n\n// Change this value for the speed of the animations.\n\n// Change this value for the number of bars (value) in the array.\nconst NUMBER_OF_ARRAY_BARS = 310;\n\n// This is the main color of the array bars.\n\n// This is the color of array bars that are being compared throughout the animations.\n\nexport default class algoviz extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 730));\n    }\n    this.setState({array});\n  }\n\n\n  render() {\n    const {array} = this.state;\n\n    return (\n    <>\n        {array.map((value, idx) => (\n<div className=\"array-bar\" key={idx}>\n    {value}\n    </div>\n         ))}\n         </>\n    );\n  }\n}\n\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n"]},"metadata":{},"sourceType":"module"}