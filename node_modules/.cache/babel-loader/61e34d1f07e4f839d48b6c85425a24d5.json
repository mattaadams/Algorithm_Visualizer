{"ast":null,"code":"export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  doSelection(array, animations);\n  return animations;\n}\n\nfunction doSelection(array, animations) {\n  let n = array.length;\n\n  for (let i = 0; i < n - 1; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n\n    for (let j = i + 1; j < n; j++) {\n      animations.push([min, j]);\n      animations.push([min, j]);\n\n      if (array[j] < array[min]) {\n        min = j;\n      }\n    }\n\n    if (min !== i) {\n      // Swapping the elements\n      let tmp = array[i];\n      array[i] = array[min];\n      array[min] = tmp;\n      animations.push([min, array[min], i, array[i]]); // index values swapped\n    } else {\n      animations.push([min, array[min], i, array[i]]); //values unchanged\n    }\n  }\n}","map":{"version":3,"sources":["/home/matta/algo_viz/src/Algos/SelectionSort.js"],"names":["getSelectionSortAnimations","array","animations","length","doSelection","n","i","min","j","push","tmp"],"mappings":"AAAA,OAAO,SAASA,0BAAT,CAAoCC,KAApC,EAA2C;AAChD,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAOF,KAAP;AACvBG,EAAAA,WAAW,CAACH,KAAD,EAAQC,UAAR,CAAX;AACA,SAAOA,UAAP;AACD;;AAED,SAASE,WAAT,CAAqBH,KAArB,EAA4BC,UAA5B,EAAwC;AACtC,MAAIG,CAAC,GAAGJ,KAAK,CAACE,MAAd;;AAEA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAAC,GAAG,CAAxB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9B;AAEA,QAAIC,GAAG,GAAGD,CAAV;;AACA,SAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGH,CAAxB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9BN,MAAAA,UAAU,CAACO,IAAX,CAAgB,CAACF,GAAD,EAAMC,CAAN,CAAhB;AACAN,MAAAA,UAAU,CAACO,IAAX,CAAgB,CAACF,GAAD,EAAMC,CAAN,CAAhB;;AAEA,UAAIP,KAAK,CAACO,CAAD,CAAL,GAAWP,KAAK,CAACM,GAAD,CAApB,EAA2B;AACzBA,QAAAA,GAAG,GAAGC,CAAN;AACD;AACF;;AAED,QAAID,GAAG,KAAKD,CAAZ,EAAe;AACb;AACA,UAAII,GAAG,GAAGT,KAAK,CAACK,CAAD,CAAf;AACAL,MAAAA,KAAK,CAACK,CAAD,CAAL,GAAWL,KAAK,CAACM,GAAD,CAAhB;AACAN,MAAAA,KAAK,CAACM,GAAD,CAAL,GAAaG,GAAb;AAEAR,MAAAA,UAAU,CAACO,IAAX,CAAgB,CAACF,GAAD,EAAMN,KAAK,CAACM,GAAD,CAAX,EAAkBD,CAAlB,EAAqBL,KAAK,CAACK,CAAD,CAA1B,CAAhB,EANa,CAMoC;AAClD,KAPD,MAOO;AACLJ,MAAAA,UAAU,CAACO,IAAX,CAAgB,CAACF,GAAD,EAAMN,KAAK,CAACM,GAAD,CAAX,EAAkBD,CAAlB,EAAqBL,KAAK,CAACK,CAAD,CAA1B,CAAhB,EADK,CAC4C;AAClD;AACF;AACF","sourcesContent":["export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  doSelection(array, animations);\n  return animations;\n}\n\nfunction doSelection(array, animations) {\n  let n = array.length;\n\n  for (let i = 0; i < n - 1; i++) {\n    // Finding the smallest number in the subarray\n\n    let min = i;\n    for (let j = i + 1; j < n; j++) {\n      animations.push([min, j]);\n      animations.push([min, j]);\n\n      if (array[j] < array[min]) {\n        min = j;\n      }\n    }\n\n    if (min !== i) {\n      // Swapping the elements\n      let tmp = array[i];\n      array[i] = array[min];\n      array[min] = tmp;\n\n      animations.push([min, array[min], i, array[i]]); // index values swapped\n    } else {\n      animations.push([min, array[min], i, array[i]]); //values unchanged\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}