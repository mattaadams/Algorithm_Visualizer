{"ast":null,"code":"export function getSelectionSortAnimations(array){var animations=[];if(array.length<=1)return array;doSelection(array,animations);return animations;}function doSelection(array,animations){var n=array.length;for(var i=0;i<n;i++){// Finding the smallest number in the subarray\nvar min=i;for(var j=i+1;j<n;j++){animations.push([1,min,j],[2,min,j]);if(array[j]<array[min]){min=j;}}if(min!==i){// Swapping the elements if needed\nvar temp=array[i];array[i]=array[min];array[min]=temp;animations.push([3,min,array[min],i,array[i]]);// index values swapped\n}}}","map":{"version":3,"sources":["/home/matta/5_13_22/Algorithm_Visualizer/src/Algos/SelectionSort.js"],"names":["getSelectionSortAnimations","array","animations","length","doSelection","n","i","min","j","push","temp"],"mappings":"AAAA,MAAO,SAASA,CAAAA,0BAAT,CAAoCC,KAApC,CAA2C,CAChD,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACA,GAAID,KAAK,CAACE,MAAN,EAAgB,CAApB,CAAuB,MAAOF,CAAAA,KAAP,CACvBG,WAAW,CAACH,KAAD,CAAQC,UAAR,CAAX,CACA,MAAOA,CAAAA,UAAP,CACD,CAED,QAASE,CAAAA,WAAT,CAAqBH,KAArB,CAA4BC,UAA5B,CAAwC,CACtC,GAAIG,CAAAA,CAAC,CAAGJ,KAAK,CAACE,MAAd,CAEA,IAAK,GAAIG,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGD,CAApB,CAAuBC,CAAC,EAAxB,CAA4B,CAC1B;AACA,GAAIC,CAAAA,GAAG,CAAGD,CAAV,CACA,IAAK,GAAIE,CAAAA,CAAC,CAAGF,CAAC,CAAG,CAAjB,CAAoBE,CAAC,CAAGH,CAAxB,CAA2BG,CAAC,EAA5B,CAAgC,CAC9BN,UAAU,CAACO,IAAX,CAAgB,CAAC,CAAD,CAAIF,GAAJ,CAASC,CAAT,CAAhB,CAA6B,CAAC,CAAD,CAAID,GAAJ,CAASC,CAAT,CAA7B,EACA,GAAIP,KAAK,CAACO,CAAD,CAAL,CAAWP,KAAK,CAACM,GAAD,CAApB,CAA2B,CACzBA,GAAG,CAAGC,CAAN,CACD,CACF,CAED,GAAID,GAAG,GAAKD,CAAZ,CAAe,CACb;AACA,GAAII,CAAAA,IAAI,CAAGT,KAAK,CAACK,CAAD,CAAhB,CACAL,KAAK,CAACK,CAAD,CAAL,CAAWL,KAAK,CAACM,GAAD,CAAhB,CACAN,KAAK,CAACM,GAAD,CAAL,CAAaG,IAAb,CACAR,UAAU,CAACO,IAAX,CAAgB,CAAC,CAAD,CAAIF,GAAJ,CAASN,KAAK,CAACM,GAAD,CAAd,CAAqBD,CAArB,CAAwBL,KAAK,CAACK,CAAD,CAA7B,CAAhB,EAAoD;AACrD,CACF,CACF","sourcesContent":["export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  doSelection(array, animations);\n  return animations;\n}\n\nfunction doSelection(array, animations) {\n  let n = array.length;\n\n  for (let i = 0; i < n; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n    for (let j = i + 1; j < n; j++) {\n      animations.push([1, min, j], [2, min, j]);\n      if (array[j] < array[min]) {\n        min = j;\n      }\n    }\n\n    if (min !== i) {\n      // Swapping the elements if needed\n      let temp = array[i];\n      array[i] = array[min];\n      array[min] = temp;\n      animations.push([3, min, array[min], i, array[i]]); // index values swapped\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}