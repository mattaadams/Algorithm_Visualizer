{"ast":null,"code":"var _jsxFileName = \"/home/matta/algo_viz/src/NavBar/NavBar.jsx\";\nimport React from \"react\";\nimport \"./NavBar.css\"; // TODO:\n// For fun: Add different viszualization\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAlgo: null\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(algorithm) {\n    this.setState({\n      activeAlgo: algorithm\n    });\n  }\n\n  render() {\n    const {\n      whenClickReset,\n      whenClickReverse,\n      changeSize,\n      changeSpeed,\n      arrayMax,\n      whenClickStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://www.google.com/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Visit Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: this.props.running === true,\n        className: this.props.running === true ? \"disabled-button\" : \"navButton\",\n        onClick: whenClickReverse,\n        children: \"Reverse Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: this.props.running === true,\n        className: this.props.running === true ? \"disabled-button\" : \"navButton\",\n        onClick: whenClickReset,\n        children: \"New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \"Change Sorting Speed --\", /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"slider\",\n        disabled: this.props.running === true,\n        type: \"range\",\n        min: \"10\",\n        max: arrayMax,\n        onChange: changeSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \"Change Array Size --\", /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"slider\",\n        disabled: this.props.running === true,\n        type: \"range\",\n        min: \"10\",\n        max: arrayMax,\n        onChange: changeSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: this.state.activeAlgo === null || this.props.running === true,\n        className: this.state.activeAlgo === null || this.props.running === true ? \"disabled-button\" : \"navButton\",\n        onClick: () => whenClickStart(this.state.activeAlgo),\n        children: \"Start Sorting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"mergeSort\",\n        className: this.state.activeAlgo === \"mergeSort\" ? \"currentAlgorithmButton\" : \"navButton\",\n        onClick: () => this.handleClick(\"mergeSort\"),\n        children: \"Merge Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: this.state.activeAlgo === \"quickSort\" ? \"currentAlgorithmButton\" : \"navButton\",\n        onClick: () => this.handleClick(\"quickSort\"),\n        children: \"Quick Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: this.state.activeAlgo === \"heapSort\" ? \"currentAlgorithmButton\" : \"navButton\",\n        onClick: () => this.handleClick(\"heapSort\"),\n        children: \"Heap Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: this.state.activeAlgo === \"selectionSort\" ? \"currentAlgorithmButton\" : \"navButton\",\n        onClick: () => this.handleClick(\"selectionSort\"),\n        children: \"Selection Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/matta/algo_viz/src/NavBar/NavBar.jsx"],"names":["React","NavBar","Component","constructor","props","state","activeAlgo","handleClick","bind","algorithm","setState","render","whenClickReset","whenClickReverse","changeSize","changeSpeed","arrayMax","whenClickStart","running"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./NavBar.css\";\n\n// TODO:\n\n// For fun: Add different viszualization\n\nexport default class NavBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAlgo: null,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(algorithm) {\n    this.setState({ activeAlgo: algorithm });\n  }\n\n  render() {\n    const { whenClickReset, whenClickReverse, changeSize, changeSpeed, arrayMax, whenClickStart } = this.props;\n\n    return (\n      <div className=\"navbar-container\">\n        <a href=\"http://www.google.com/\">\n          <button>Visit Google</button>\n        </a>\n        <button\n          disabled={this.props.running === true}\n          className={this.props.running === true ? \"disabled-button\" : \"navButton\"}\n          onClick={whenClickReverse}\n        >\n          Reverse Array\n        </button>\n        <button\n          disabled={this.props.running === true}\n          className={this.props.running === true ? \"disabled-button\" : \"navButton\"}\n          onClick={whenClickReset}\n        >\n          New Array\n        </button>\n        Change Sorting Speed --\n        <input class=\"slider\" disabled={this.props.running === true} type=\"range\" min=\"10\" max={arrayMax} onChange={changeSpeed} />\n        Change Array Size --\n        <input class=\"slider\" disabled={this.props.running === true} type=\"range\" min=\"10\" max={arrayMax} onChange={changeSize} />\n        <button\n          disabled={this.state.activeAlgo === null || this.props.running === true}\n          className={this.state.activeAlgo === null || this.props.running === true ? \"disabled-button\" : \"navButton\"}\n          onClick={() => whenClickStart(this.state.activeAlgo)}\n        >\n          Start Sorting\n        </button>\n        <button\n          id=\"mergeSort\"\n          className={this.state.activeAlgo === \"mergeSort\" ? \"currentAlgorithmButton\" : \"navButton\"}\n          onClick={() => this.handleClick(\"mergeSort\")}\n        >\n          Merge Sort\n        </button>\n        <button\n          className={this.state.activeAlgo === \"quickSort\" ? \"currentAlgorithmButton\" : \"navButton\"}\n          onClick={() => this.handleClick(\"quickSort\")}\n        >\n          Quick Sort\n        </button>\n        <button\n          className={this.state.activeAlgo === \"heapSort\" ? \"currentAlgorithmButton\" : \"navButton\"}\n          onClick={() => this.handleClick(\"heapSort\")}\n        >\n          Heap Sort\n        </button>\n        <button\n          className={this.state.activeAlgo === \"selectionSort\" ? \"currentAlgorithmButton\" : \"navButton\"}\n          onClick={() => this.handleClick(\"selectionSort\")}\n        >\n          Selection Sort\n        </button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}