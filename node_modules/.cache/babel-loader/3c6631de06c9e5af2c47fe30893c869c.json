{"ast":null,"code":"export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  doSelection(array, animations);\n  return animations;\n}\n\nfunction selectionSortHelper(mainArray, startIdx, endIdx, auxiliaryArray, animations) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  selectionSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  selectionSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doSelection(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doSelection(mainArray, animations) {\n  let n = mainArray.length;\n\n  for (let i = 0; i < n; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n\n    for (let j = i + 1; j < n; j++) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n\n      if (mainArray[j] < mainArray[min]) {\n        min = j;\n      }\n    }\n\n    if (min != i) {\n      // Swapping the elements\n      let tmp = mainArray[i];\n      mainArray[i] = mainArray[min];\n      mainArray[min] = tmp; //animations.push([i, mainArray[min]]);\n\n      animations.push([min, tmp]);\n    }\n  }\n}","map":{"version":3,"sources":["/home/matta/algo_viz/src/Algos/SelectionSort.js"],"names":["getSelectionSortAnimations","array","animations","length","auxiliaryArray","slice","doSelection","selectionSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","n","i","min","j","push","tmp"],"mappings":"AAAA,OAAO,SAASA,0BAAT,CAAoCC,KAApC,EAA2C;AAChD,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAOF,KAAP;AACvB,QAAMG,cAAc,GAAGH,KAAK,CAACI,KAAN,EAAvB;AACAC,EAAAA,WAAW,CAACL,KAAD,EAAQC,UAAR,CAAX;AACA,SAAOA,UAAP;AACD;;AAED,SAASK,mBAAT,CAA6BC,SAA7B,EAAwCC,QAAxC,EAAkDC,MAAlD,EAA0DN,cAA1D,EAA0EF,UAA1E,EAAsF;AACpF,MAAIO,QAAQ,KAAKC,MAAjB,EAAyB;AACzB,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,QAAQ,GAAGC,MAAZ,IAAsB,CAAjC,CAAlB;AACAH,EAAAA,mBAAmB,CAACH,cAAD,EAAiBK,QAAjB,EAA2BE,SAA3B,EAAsCH,SAAtC,EAAiDN,UAAjD,CAAnB;AACAK,EAAAA,mBAAmB,CAACH,cAAD,EAAiBO,SAAS,GAAG,CAA7B,EAAgCD,MAAhC,EAAwCF,SAAxC,EAAmDN,UAAnD,CAAnB;AACAI,EAAAA,WAAW,CAACE,SAAD,EAAYC,QAAZ,EAAsBE,SAAtB,EAAiCD,MAAjC,EAAyCN,cAAzC,EAAyDF,UAAzD,CAAX;AACD;;AACD,SAASI,WAAT,CAAqBE,SAArB,EAAgCN,UAAhC,EAA4C;AAC1C,MAAIY,CAAC,GAAGN,SAAS,CAACL,MAAlB;;AAEA,OAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA4B;AAC1B;AACA,QAAIC,GAAG,GAAGD,CAAV;;AACA,SAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGH,CAAxB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9Bf,MAAAA,UAAU,CAACgB,IAAX,CAAgB,CAACH,CAAD,EAAIE,CAAJ,CAAhB;AACAf,MAAAA,UAAU,CAACgB,IAAX,CAAgB,CAACH,CAAD,EAAIE,CAAJ,CAAhB;;AAEA,UAAIT,SAAS,CAACS,CAAD,CAAT,GAAeT,SAAS,CAACQ,GAAD,CAA5B,EAAmC;AACjCA,QAAAA,GAAG,GAAGC,CAAN;AACD;AACF;;AACD,QAAID,GAAG,IAAID,CAAX,EAAc;AACZ;AACA,UAAII,GAAG,GAAGX,SAAS,CAACO,CAAD,CAAnB;AACAP,MAAAA,SAAS,CAACO,CAAD,CAAT,GAAeP,SAAS,CAACQ,GAAD,CAAxB;AACAR,MAAAA,SAAS,CAACQ,GAAD,CAAT,GAAiBG,GAAjB,CAJY,CAKZ;;AACAjB,MAAAA,UAAU,CAACgB,IAAX,CAAgB,CAACF,GAAD,EAAMG,GAAN,CAAhB;AACD;AACF;AACF","sourcesContent":["export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  doSelection(array, animations);\n  return animations;\n}\n\nfunction selectionSortHelper(mainArray, startIdx, endIdx, auxiliaryArray, animations) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  selectionSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  selectionSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doSelection(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\nfunction doSelection(mainArray, animations) {\n  let n = mainArray.length;\n\n  for (let i = 0; i < n; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n    for (let j = i + 1; j < n; j++) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n\n      if (mainArray[j] < mainArray[min]) {\n        min = j;\n      }\n    }\n    if (min != i) {\n      // Swapping the elements\n      let tmp = mainArray[i];\n      mainArray[i] = mainArray[min];\n      mainArray[min] = tmp;\n      //animations.push([i, mainArray[min]]);\n      animations.push([min, tmp]);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}