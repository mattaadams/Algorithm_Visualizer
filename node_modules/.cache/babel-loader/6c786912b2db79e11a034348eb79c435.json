{"ast":null,"code":"export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  selectionSortHelper(array, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction selectionSortHelper(mainArray, auxiliaryArray, animations) {\n  selectionSortHelper(auxiliaryArray, mainArray, animations);\n  selectionSortHelper(auxiliaryArray, mainArray, animations);\n  doSelection(mainArray, auxiliaryArray, animations);\n}\n\nfunction doSelection(mainArray, auxiliaryArray, animations) {\n  let n = mainArray.length;\n\n  for (let i = 0; i < n; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n\n    for (let j = i + 1; j < n; j++) {\n      //animations.push([i, j]);\n      //animations.push([i, j]);\n      if (mainArray[j] < mainArray[min]) {\n        min = j;\n      }\n    }\n\n    if (min !== i) {\n      // Swapping the elements\n      let tmp = mainArray[i];\n      mainArray[i] = mainArray[min];\n      mainArray[min] = tmp; //animations.push([i, auxiliaryArray[min]]);\n      //animations.push([min, tmp]);\n    }\n  }\n}","map":{"version":3,"sources":["/home/matta/algo_viz/src/Algos/SelectionSort.js"],"names":["getSelectionSortAnimations","array","animations","length","auxiliaryArray","slice","selectionSortHelper","mainArray","doSelection","n","i","min","j","tmp"],"mappings":"AAAA,OAAO,SAASA,0BAAT,CAAoCC,KAApC,EAA2C;AAChD,QAAMC,UAAU,GAAG,EAAnB;AACA,MAAID,KAAK,CAACE,MAAN,IAAgB,CAApB,EAAuB,OAAOF,KAAP;AACvB,QAAMG,cAAc,GAAGH,KAAK,CAACI,KAAN,EAAvB;AACAC,EAAAA,mBAAmB,CAACL,KAAD,EAAQG,cAAR,EAAwBF,UAAxB,CAAnB;AACA,SAAOA,UAAP;AACD;;AAED,SAASI,mBAAT,CAA6BC,SAA7B,EAAwCH,cAAxC,EAAwDF,UAAxD,EAAoE;AAClEI,EAAAA,mBAAmB,CAACF,cAAD,EAAiBG,SAAjB,EAA4BL,UAA5B,CAAnB;AACAI,EAAAA,mBAAmB,CAACF,cAAD,EAAiBG,SAAjB,EAA4BL,UAA5B,CAAnB;AACAM,EAAAA,WAAW,CAACD,SAAD,EAAYH,cAAZ,EAA4BF,UAA5B,CAAX;AACD;;AACD,SAASM,WAAT,CAAqBD,SAArB,EAAgCH,cAAhC,EAAgDF,UAAhD,EAA4D;AAC1D,MAAIO,CAAC,GAAGF,SAAS,CAACJ,MAAlB;;AAEA,OAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,CAApB,EAAuBC,CAAC,EAAxB,EAA4B;AAC1B;AACA,QAAIC,GAAG,GAAGD,CAAV;;AACA,SAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGH,CAAxB,EAA2BG,CAAC,EAA5B,EAAgC;AAC9B;AACA;AAEA,UAAIL,SAAS,CAACK,CAAD,CAAT,GAAeL,SAAS,CAACI,GAAD,CAA5B,EAAmC;AACjCA,QAAAA,GAAG,GAAGC,CAAN;AACD;AACF;;AACD,QAAID,GAAG,KAAKD,CAAZ,EAAe;AACb;AACA,UAAIG,GAAG,GAAGN,SAAS,CAACG,CAAD,CAAnB;AACAH,MAAAA,SAAS,CAACG,CAAD,CAAT,GAAeH,SAAS,CAACI,GAAD,CAAxB;AACAJ,MAAAA,SAAS,CAACI,GAAD,CAAT,GAAiBE,GAAjB,CAJa,CAKb;AACA;AACD;AACF;AACF","sourcesContent":["export function getSelectionSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  selectionSortHelper(array, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction selectionSortHelper(mainArray, auxiliaryArray, animations) {\n  selectionSortHelper(auxiliaryArray, mainArray, animations);\n  selectionSortHelper(auxiliaryArray, mainArray, animations);\n  doSelection(mainArray, auxiliaryArray, animations);\n}\nfunction doSelection(mainArray, auxiliaryArray, animations) {\n  let n = mainArray.length;\n\n  for (let i = 0; i < n; i++) {\n    // Finding the smallest number in the subarray\n    let min = i;\n    for (let j = i + 1; j < n; j++) {\n      //animations.push([i, j]);\n      //animations.push([i, j]);\n\n      if (mainArray[j] < mainArray[min]) {\n        min = j;\n      }\n    }\n    if (min !== i) {\n      // Swapping the elements\n      let tmp = mainArray[i];\n      mainArray[i] = mainArray[min];\n      mainArray[min] = tmp;\n      //animations.push([i, auxiliaryArray[min]]);\n      //animations.push([min, tmp]);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}